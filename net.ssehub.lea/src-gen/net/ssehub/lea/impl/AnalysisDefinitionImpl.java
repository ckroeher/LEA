/**
 * generated by Xtext 2.18.0
 */
package net.ssehub.lea.impl;

import java.util.Collection;

import net.ssehub.lea.AnalysisDefinition;
import net.ssehub.lea.ChangeIdentifierAssignment;
import net.ssehub.lea.ElementDeclaration;
import net.ssehub.lea.LeaPackage;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Analysis Definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link net.ssehub.lea.impl.AnalysisDefinitionImpl#getElementDeclarations <em>Element Declarations</em>}</li>
 *   <li>{@link net.ssehub.lea.impl.AnalysisDefinitionImpl#getChangeIdentifierAssignments <em>Change Identifier Assignments</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AnalysisDefinitionImpl extends MinimalEObjectImpl.Container implements AnalysisDefinition
{
  /**
   * The cached value of the '{@link #getElementDeclarations() <em>Element Declarations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElementDeclarations()
   * @generated
   * @ordered
   */
  protected EList<ElementDeclaration> elementDeclarations;

  /**
   * The cached value of the '{@link #getChangeIdentifierAssignments() <em>Change Identifier Assignments</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChangeIdentifierAssignments()
   * @generated
   * @ordered
   */
  protected EList<ChangeIdentifierAssignment> changeIdentifierAssignments;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AnalysisDefinitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LeaPackage.Literals.ANALYSIS_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ElementDeclaration> getElementDeclarations()
  {
    if (elementDeclarations == null)
    {
      elementDeclarations = new EObjectContainmentEList<ElementDeclaration>(ElementDeclaration.class, this, LeaPackage.ANALYSIS_DEFINITION__ELEMENT_DECLARATIONS);
    }
    return elementDeclarations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ChangeIdentifierAssignment> getChangeIdentifierAssignments()
  {
    if (changeIdentifierAssignments == null)
    {
      changeIdentifierAssignments = new EObjectContainmentEList<ChangeIdentifierAssignment>(ChangeIdentifierAssignment.class, this, LeaPackage.ANALYSIS_DEFINITION__CHANGE_IDENTIFIER_ASSIGNMENTS);
    }
    return changeIdentifierAssignments;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LeaPackage.ANALYSIS_DEFINITION__ELEMENT_DECLARATIONS:
        return ((InternalEList<?>)getElementDeclarations()).basicRemove(otherEnd, msgs);
      case LeaPackage.ANALYSIS_DEFINITION__CHANGE_IDENTIFIER_ASSIGNMENTS:
        return ((InternalEList<?>)getChangeIdentifierAssignments()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LeaPackage.ANALYSIS_DEFINITION__ELEMENT_DECLARATIONS:
        return getElementDeclarations();
      case LeaPackage.ANALYSIS_DEFINITION__CHANGE_IDENTIFIER_ASSIGNMENTS:
        return getChangeIdentifierAssignments();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LeaPackage.ANALYSIS_DEFINITION__ELEMENT_DECLARATIONS:
        getElementDeclarations().clear();
        getElementDeclarations().addAll((Collection<? extends ElementDeclaration>)newValue);
        return;
      case LeaPackage.ANALYSIS_DEFINITION__CHANGE_IDENTIFIER_ASSIGNMENTS:
        getChangeIdentifierAssignments().clear();
        getChangeIdentifierAssignments().addAll((Collection<? extends ChangeIdentifierAssignment>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LeaPackage.ANALYSIS_DEFINITION__ELEMENT_DECLARATIONS:
        getElementDeclarations().clear();
        return;
      case LeaPackage.ANALYSIS_DEFINITION__CHANGE_IDENTIFIER_ASSIGNMENTS:
        getChangeIdentifierAssignments().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LeaPackage.ANALYSIS_DEFINITION__ELEMENT_DECLARATIONS:
        return elementDeclarations != null && !elementDeclarations.isEmpty();
      case LeaPackage.ANALYSIS_DEFINITION__CHANGE_IDENTIFIER_ASSIGNMENTS:
        return changeIdentifierAssignments != null && !changeIdentifierAssignments.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //AnalysisDefinitionImpl
