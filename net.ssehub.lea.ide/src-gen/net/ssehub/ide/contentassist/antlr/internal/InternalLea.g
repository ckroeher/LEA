/*
 * generated by Xtext 2.18.0
 */
grammar InternalLea;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package net.ssehub.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package net.ssehub.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import net.ssehub.services.LeaGrammarAccess;

}
@parser::members {
	private LeaGrammarAccess grammarAccess;

	public void setGrammarAccess(LeaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleAnalysisDefinition
entryRuleAnalysisDefinition
:
{ before(grammarAccess.getAnalysisDefinitionRule()); }
	 ruleAnalysisDefinition
{ after(grammarAccess.getAnalysisDefinitionRule()); } 
	 EOF 
;

// Rule AnalysisDefinition
ruleAnalysisDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnalysisDefinitionAccess().getGroup()); }
		(rule__AnalysisDefinition__Group__0)
		{ after(grammarAccess.getAnalysisDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChangeIdentifierAssignment
entryRuleChangeIdentifierAssignment
:
{ before(grammarAccess.getChangeIdentifierAssignmentRule()); }
	 ruleChangeIdentifierAssignment
{ after(grammarAccess.getChangeIdentifierAssignmentRule()); } 
	 EOF 
;

// Rule ChangeIdentifierAssignment
ruleChangeIdentifierAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeIdentifierAssignmentAccess().getGroup()); }
		(rule__ChangeIdentifierAssignment__Group__0)
		{ after(grammarAccess.getChangeIdentifierAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArtifactDeclaration
entryRuleArtifactDeclaration
:
{ before(grammarAccess.getArtifactDeclarationRule()); }
	 ruleArtifactDeclaration
{ after(grammarAccess.getArtifactDeclarationRule()); } 
	 EOF 
;

// Rule ArtifactDeclaration
ruleArtifactDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArtifactDeclarationAccess().getGroup()); }
		(rule__ArtifactDeclaration__Group__0)
		{ after(grammarAccess.getArtifactDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFragmentDeclaration
entryRuleFragmentDeclaration
:
{ before(grammarAccess.getFragmentDeclarationRule()); }
	 ruleFragmentDeclaration
{ after(grammarAccess.getFragmentDeclarationRule()); } 
	 EOF 
;

// Rule FragmentDeclaration
ruleFragmentDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFragmentDeclarationAccess().getGroup()); }
		(rule__FragmentDeclaration__Group__0)
		{ after(grammarAccess.getFragmentDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResultDeclaration
entryRuleResultDeclaration
:
{ before(grammarAccess.getResultDeclarationRule()); }
	 ruleResultDeclaration
{ after(grammarAccess.getResultDeclarationRule()); } 
	 EOF 
;

// Rule ResultDeclaration
ruleResultDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResultDeclarationAccess().getGroup()); }
		(rule__ResultDeclaration__Group__0)
		{ after(grammarAccess.getResultDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetDefinition
entryRuleSetDefinition
:
{ before(grammarAccess.getSetDefinitionRule()); }
	 ruleSetDefinition
{ after(grammarAccess.getSetDefinitionRule()); } 
	 EOF 
;

// Rule SetDefinition
ruleSetDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetDefinitionAccess().getGroup()); }
		(rule__SetDefinition__Group__0)
		{ after(grammarAccess.getSetDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIteration
entryRuleIteration
:
{ before(grammarAccess.getIterationRule()); }
	 ruleIteration
{ after(grammarAccess.getIterationRule()); } 
	 EOF 
;

// Rule Iteration
ruleIteration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIterationAccess().getGroup()); }
		(rule__Iteration__Group__0)
		{ after(grammarAccess.getIterationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getGroup()); }
		(rule__Operation__Group__0)
		{ after(grammarAccess.getOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCall
entryRuleCall
:
{ before(grammarAccess.getCallRule()); }
	 ruleCall
{ after(grammarAccess.getCallRule()); } 
	 EOF 
;

// Rule Call
ruleCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallAccess().getGroup()); }
		(rule__Call__Group__0)
		{ after(grammarAccess.getCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterList
entryRuleParameterList
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getAlternatives()); }
		(rule__Parameter__Alternatives)
		{ after(grammarAccess.getParameterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisDefinition__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnalysisDefinitionAccess().getElementsAssignment_1_0()); }
		(rule__AnalysisDefinition__ElementsAssignment_1_0)
		{ after(grammarAccess.getAnalysisDefinitionAccess().getElementsAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnalysisDefinitionAccess().getElementsAssignment_1_1()); }
		(rule__AnalysisDefinition__ElementsAssignment_1_1)
		{ after(grammarAccess.getAnalysisDefinitionAccess().getElementsAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getAnalysisDefinitionAccess().getElementsAssignment_1_2()); }
		(rule__AnalysisDefinition__ElementsAssignment_1_2)
		{ after(grammarAccess.getAnalysisDefinitionAccess().getElementsAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getAnalysisDefinitionAccess().getElementsAssignment_1_3()); }
		(rule__AnalysisDefinition__ElementsAssignment_1_3)
		{ after(grammarAccess.getAnalysisDefinitionAccess().getElementsAssignment_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getElementAssignment_1_0()); }
		(rule__Assignment__ElementAssignment_1_0)
		{ after(grammarAccess.getAssignmentAccess().getElementAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentAccess().getOperationAssignment_1_1()); }
		(rule__Assignment__OperationAssignment_1_1)
		{ after(grammarAccess.getAssignmentAccess().getOperationAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTextAssignment_0()); }
		(rule__Parameter__TextAssignment_0)
		{ after(grammarAccess.getParameterAccess().getTextAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getElementAssignment_1()); }
		(rule__Parameter__ElementAssignment_1)
		{ after(grammarAccess.getParameterAccess().getElementAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getOperationAssignment_2()); }
		(rule__Parameter__OperationAssignment_2)
		{ after(grammarAccess.getParameterAccess().getOperationAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnalysisDefinition__Group__0__Impl
	rule__AnalysisDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnalysisDefinitionAccess().getAnalysisDefinitionAction_0()); }
	()
	{ after(grammarAccess.getAnalysisDefinitionAccess().getAnalysisDefinitionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnalysisDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnalysisDefinitionAccess().getAlternatives_1()); }
	(rule__AnalysisDefinition__Alternatives_1)*
	{ after(grammarAccess.getAnalysisDefinitionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeIdentifierAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeIdentifierAssignment__Group__0__Impl
	rule__ChangeIdentifierAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeIdentifierAssignmentAccess().getAssignKeyword_0()); }
	'assign'
	{ after(grammarAccess.getChangeIdentifierAssignmentAccess().getAssignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeIdentifierAssignment__Group__1__Impl
	rule__ChangeIdentifierAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeIdentifierAssignmentAccess().getIdentifierAssignment_1()); }
	(rule__ChangeIdentifierAssignment__IdentifierAssignment_1)
	{ after(grammarAccess.getChangeIdentifierAssignmentAccess().getIdentifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeIdentifierAssignment__Group__2__Impl
	rule__ChangeIdentifierAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeIdentifierAssignmentAccess().getToKeyword_2()); }
	'to'
	{ after(grammarAccess.getChangeIdentifierAssignmentAccess().getToKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeIdentifierAssignment__Group__3__Impl
	rule__ChangeIdentifierAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeIdentifierAssignmentAccess().getElementsAssignment_3()); }
	(rule__ChangeIdentifierAssignment__ElementsAssignment_3)
	{ after(grammarAccess.getChangeIdentifierAssignmentAccess().getElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeIdentifierAssignment__Group__4__Impl
	rule__ChangeIdentifierAssignment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeIdentifierAssignmentAccess().getGroup_4()); }
	(rule__ChangeIdentifierAssignment__Group_4__0)*
	{ after(grammarAccess.getChangeIdentifierAssignmentAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeIdentifierAssignment__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeIdentifierAssignmentAccess().getSemicolonKeyword_5()); }
	(';')?
	{ after(grammarAccess.getChangeIdentifierAssignmentAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeIdentifierAssignment__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeIdentifierAssignment__Group_4__0__Impl
	rule__ChangeIdentifierAssignment__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeIdentifierAssignmentAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getChangeIdentifierAssignmentAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeIdentifierAssignment__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeIdentifierAssignmentAccess().getElementsAssignment_4_1()); }
	(rule__ChangeIdentifierAssignment__ElementsAssignment_4_1)
	{ after(grammarAccess.getChangeIdentifierAssignmentAccess().getElementsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArtifactDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArtifactDeclaration__Group__0__Impl
	rule__ArtifactDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactDeclarationAccess().getArtifactKeyword_0()); }
	'Artifact'
	{ after(grammarAccess.getArtifactDeclarationAccess().getArtifactKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArtifactDeclaration__Group__1__Impl
	rule__ArtifactDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactDeclarationAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getArtifactDeclarationAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArtifactDeclaration__Group__2__Impl
	rule__ArtifactDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactDeclarationAccess().getTypeAssignment_2()); }
	(rule__ArtifactDeclaration__TypeAssignment_2)
	{ after(grammarAccess.getArtifactDeclarationAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArtifactDeclaration__Group__3__Impl
	rule__ArtifactDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactDeclarationAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getArtifactDeclarationAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArtifactDeclaration__Group__4__Impl
	rule__ArtifactDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactDeclarationAccess().getSetAssignment_4()); }
	(rule__ArtifactDeclaration__SetAssignment_4)?
	{ after(grammarAccess.getArtifactDeclarationAccess().getSetAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArtifactDeclaration__Group__5__Impl
	rule__ArtifactDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactDeclarationAccess().getNameAssignment_5()); }
	(rule__ArtifactDeclaration__NameAssignment_5)
	{ after(grammarAccess.getArtifactDeclarationAccess().getNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArtifactDeclaration__Group__6__Impl
	rule__ArtifactDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactDeclarationAccess().getInitializationAssignment_6()); }
	(rule__ArtifactDeclaration__InitializationAssignment_6)?
	{ after(grammarAccess.getArtifactDeclarationAccess().getInitializationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArtifactDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArtifactDeclarationAccess().getSemicolonKeyword_7()); }
	(';')?
	{ after(grammarAccess.getArtifactDeclarationAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FragmentDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentDeclaration__Group__0__Impl
	rule__FragmentDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentDeclarationAccess().getFragmentKeyword_0()); }
	'Fragment'
	{ after(grammarAccess.getFragmentDeclarationAccess().getFragmentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentDeclaration__Group__1__Impl
	rule__FragmentDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentDeclarationAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getFragmentDeclarationAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentDeclaration__Group__2__Impl
	rule__FragmentDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentDeclarationAccess().getTypeAssignment_2()); }
	(rule__FragmentDeclaration__TypeAssignment_2)
	{ after(grammarAccess.getFragmentDeclarationAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentDeclaration__Group__3__Impl
	rule__FragmentDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentDeclarationAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getFragmentDeclarationAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentDeclaration__Group__4__Impl
	rule__FragmentDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentDeclarationAccess().getSetAssignment_4()); }
	(rule__FragmentDeclaration__SetAssignment_4)?
	{ after(grammarAccess.getFragmentDeclarationAccess().getSetAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentDeclaration__Group__5__Impl
	rule__FragmentDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentDeclarationAccess().getNameAssignment_5()); }
	(rule__FragmentDeclaration__NameAssignment_5)
	{ after(grammarAccess.getFragmentDeclarationAccess().getNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentDeclaration__Group__6__Impl
	rule__FragmentDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentDeclarationAccess().getInitializationAssignment_6()); }
	(rule__FragmentDeclaration__InitializationAssignment_6)?
	{ after(grammarAccess.getFragmentDeclarationAccess().getInitializationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentDeclarationAccess().getSemicolonKeyword_7()); }
	(';')?
	{ after(grammarAccess.getFragmentDeclarationAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResultDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResultDeclaration__Group__0__Impl
	rule__ResultDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultDeclarationAccess().getResultKeyword_0()); }
	'Result'
	{ after(grammarAccess.getResultDeclarationAccess().getResultKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResultDeclaration__Group__1__Impl
	rule__ResultDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultDeclarationAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getResultDeclarationAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResultDeclaration__Group__2__Impl
	rule__ResultDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultDeclarationAccess().getTypeAssignment_2()); }
	(rule__ResultDeclaration__TypeAssignment_2)
	{ after(grammarAccess.getResultDeclarationAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResultDeclaration__Group__3__Impl
	rule__ResultDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultDeclarationAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getResultDeclarationAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResultDeclaration__Group__4__Impl
	rule__ResultDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultDeclarationAccess().getSetAssignment_4()); }
	(rule__ResultDeclaration__SetAssignment_4)?
	{ after(grammarAccess.getResultDeclarationAccess().getSetAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResultDeclaration__Group__5__Impl
	rule__ResultDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultDeclarationAccess().getNameAssignment_5()); }
	(rule__ResultDeclaration__NameAssignment_5)
	{ after(grammarAccess.getResultDeclarationAccess().getNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResultDeclaration__Group__6__Impl
	rule__ResultDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultDeclarationAccess().getInitializationAssignment_6()); }
	(rule__ResultDeclaration__InitializationAssignment_6)?
	{ after(grammarAccess.getResultDeclarationAccess().getInitializationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResultDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultDeclarationAccess().getSemicolonKeyword_7()); }
	(';')?
	{ after(grammarAccess.getResultDeclarationAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDefinition__Group__0__Impl
	rule__SetDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDefinitionAccess().getSetDefinitionAction_0()); }
	()
	{ after(grammarAccess.getSetDefinitionAccess().getSetDefinitionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDefinition__Group__1__Impl
	rule__SetDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDefinitionAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getSetDefinitionAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDefinition__Group__2__Impl
	rule__SetDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDefinitionAccess().getIterationAssignment_2()); }
	(rule__SetDefinition__IterationAssignment_2)?
	{ after(grammarAccess.getSetDefinitionAccess().getIterationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDefinitionAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getSetDefinitionAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Iteration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration__Group__0__Impl
	rule__Iteration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterationAccess().getIteratorAssignment_0()); }
	(rule__Iteration__IteratorAssignment_0)
	{ after(grammarAccess.getIterationAccess().getIteratorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration__Group__1__Impl
	rule__Iteration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getIterationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Iteration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterationAccess().getIterableAssignment_2()); }
	(rule__Iteration__IterableAssignment_2)
	{ after(grammarAccess.getIterationAccess().getIterableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_0()); }
	'='
	{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAlternatives_1()); }
	(rule__Assignment__Alternatives_1)
	{ after(grammarAccess.getAssignmentAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getGroup_0()); }
	(rule__Operation__Group_0__0)?
	{ after(grammarAccess.getOperationAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getCallAssignment_1()); }
	(rule__Operation__CallAssignment_1)
	{ after(grammarAccess.getOperationAccess().getCallAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getGroup_2()); }
	(rule__Operation__Group_2__0)?
	{ after(grammarAccess.getOperationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_0__0__Impl
	rule__Operation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getElementAssignment_0_0()); }
	(rule__Operation__ElementAssignment_0_0)
	{ after(grammarAccess.getOperationAccess().getElementAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getOperationAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_2__0__Impl
	rule__Operation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getOperationAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getCallAssignment_2_1()); }
	(rule__Operation__CallAssignment_2_1)
	{ after(grammarAccess.getOperationAccess().getCallAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group__0__Impl
	rule__Call__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getNameAssignment_0()); }
	(rule__Call__NameAssignment_0)
	{ after(grammarAccess.getCallAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group__1__Impl
	rule__Call__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group__2__Impl
	rule__Call__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getParametersAssignment_2()); }
	(rule__Call__ParametersAssignment_2)?
	{ after(grammarAccess.getCallAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterListAssignment_0()); }
	(rule__ParameterList__ParameterListAssignment_0)
	{ after(grammarAccess.getParameterListAccess().getParameterListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
	(rule__ParameterList__Group_1__0)*
	{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterListAssignment_1_1()); }
	(rule__ParameterList__ParameterListAssignment_1_1)
	{ after(grammarAccess.getParameterListAccess().getParameterListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnalysisDefinition__ElementsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnalysisDefinitionAccess().getElementsArtifactDeclarationParserRuleCall_1_0_0()); }
		ruleArtifactDeclaration
		{ after(grammarAccess.getAnalysisDefinitionAccess().getElementsArtifactDeclarationParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisDefinition__ElementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnalysisDefinitionAccess().getElementsFragmentDeclarationParserRuleCall_1_1_0()); }
		ruleFragmentDeclaration
		{ after(grammarAccess.getAnalysisDefinitionAccess().getElementsFragmentDeclarationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisDefinition__ElementsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnalysisDefinitionAccess().getElementsResultDeclarationParserRuleCall_1_2_0()); }
		ruleResultDeclaration
		{ after(grammarAccess.getAnalysisDefinitionAccess().getElementsResultDeclarationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisDefinition__ElementsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnalysisDefinitionAccess().getElementsChangeIdentifierAssignmentParserRuleCall_1_3_0()); }
		ruleChangeIdentifierAssignment
		{ after(grammarAccess.getAnalysisDefinitionAccess().getElementsChangeIdentifierAssignmentParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__IdentifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeIdentifierAssignmentAccess().getIdentifierIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getChangeIdentifierAssignmentAccess().getIdentifierIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__ElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeIdentifierAssignmentAccess().getElementsIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getChangeIdentifierAssignmentAccess().getElementsIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeIdentifierAssignment__ElementsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeIdentifierAssignmentAccess().getElementsIDTerminalRuleCall_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getChangeIdentifierAssignmentAccess().getElementsIDTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArtifactDeclarationAccess().getTypeIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getArtifactDeclarationAccess().getTypeIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__SetAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArtifactDeclarationAccess().getSetSetDefinitionParserRuleCall_4_0()); }
		ruleSetDefinition
		{ after(grammarAccess.getArtifactDeclarationAccess().getSetSetDefinitionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__NameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArtifactDeclarationAccess().getNameIDTerminalRuleCall_5_0()); }
		RULE_ID
		{ after(grammarAccess.getArtifactDeclarationAccess().getNameIDTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArtifactDeclaration__InitializationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArtifactDeclarationAccess().getInitializationAssignmentParserRuleCall_6_0()); }
		ruleAssignment
		{ after(grammarAccess.getArtifactDeclarationAccess().getInitializationAssignmentParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFragmentDeclarationAccess().getTypeIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFragmentDeclarationAccess().getTypeIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__SetAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFragmentDeclarationAccess().getSetSetDefinitionParserRuleCall_4_0()); }
		ruleSetDefinition
		{ after(grammarAccess.getFragmentDeclarationAccess().getSetSetDefinitionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__NameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFragmentDeclarationAccess().getNameIDTerminalRuleCall_5_0()); }
		RULE_ID
		{ after(grammarAccess.getFragmentDeclarationAccess().getNameIDTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDeclaration__InitializationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFragmentDeclarationAccess().getInitializationAssignmentParserRuleCall_6_0()); }
		ruleAssignment
		{ after(grammarAccess.getFragmentDeclarationAccess().getInitializationAssignmentParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultDeclarationAccess().getTypeIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getResultDeclarationAccess().getTypeIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__SetAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultDeclarationAccess().getSetSetDefinitionParserRuleCall_4_0()); }
		ruleSetDefinition
		{ after(grammarAccess.getResultDeclarationAccess().getSetSetDefinitionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__NameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultDeclarationAccess().getNameIDTerminalRuleCall_5_0()); }
		RULE_ID
		{ after(grammarAccess.getResultDeclarationAccess().getNameIDTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultDeclaration__InitializationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultDeclarationAccess().getInitializationAssignmentParserRuleCall_6_0()); }
		ruleAssignment
		{ after(grammarAccess.getResultDeclarationAccess().getInitializationAssignmentParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDefinition__IterationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetDefinitionAccess().getIterationIterationParserRuleCall_2_0()); }
		ruleIteration
		{ after(grammarAccess.getSetDefinitionAccess().getIterationIterationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__IteratorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIterationAccess().getIteratorIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getIterationAccess().getIteratorIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Iteration__IterableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIterationAccess().getIterableIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getIterationAccess().getIterableIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ElementAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getElementIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAssignmentAccess().getElementIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__OperationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getOperationOperationParserRuleCall_1_1_0()); }
		ruleOperation
		{ after(grammarAccess.getAssignmentAccess().getOperationOperationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ElementAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getElementIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getOperationAccess().getElementIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__CallAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getCallCallParserRuleCall_1_0()); }
		ruleCall
		{ after(grammarAccess.getOperationAccess().getCallCallParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__CallAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getCallCallParserRuleCall_2_1_0()); }
		ruleCall
		{ after(grammarAccess.getOperationAccess().getCallCallParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getCallAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallAccess().getParametersParameterListParserRuleCall_2_0()); }
		ruleParameterList
		{ after(grammarAccess.getCallAccess().getParametersParameterListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParameterListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParameterListParameterParserRuleCall_0_0()); }
		ruleParameter
		{ after(grammarAccess.getParameterListAccess().getParameterListParameterParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParameterListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParameterListParameterParserRuleCall_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getParameterListAccess().getParameterListParameterParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TextAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTextSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getParameterAccess().getTextSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getElementIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getElementIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__OperationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getOperationOperationParserRuleCall_2_0()); }
		ruleOperation
		{ after(grammarAccess.getParameterAccess().getOperationOperationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
